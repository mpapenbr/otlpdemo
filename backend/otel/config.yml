receivers:
  # this is the default receiver for OTLP. Insecure for grpc + http.
  otlp:
    protocols:
      grpc:
        endpoint: otlp:4317 # use service name here
      http:
        endpoint: otlp:4318 # use service name here
  # this is the receiver for OTLP over TLS.
  otlp/tls:
    protocols:
      grpc:
        endpoint: otlp:4319 # use service name here
        tls:
          cert_file: /certs/server.crt
          key_file: /certs/server.key
  # this is the receiver for OTLP with mTLS.
  otlp/mtls:
    protocols:
      grpc:
        endpoint: otlp:4320 # use service name here
        tls:
          client_ca_file: /certs/rootCA.pem
          cert_file: /certs/server.crt
          key_file: /certs/server.key

processors:
  batch:
  memory_limiter:
    check_interval: 2s
    limit_percentage: 30
    spike_limit_percentage: 10

  attributes/prometheus:
    actions:
      - key: service_version
        action: delete

exporters:
  debug:
    verbosity: detailed

  # this one converts the dots to underscores automatically
  prometheusremotewrite:
    endpoint: http://prometheus:9090/api/v1/write
    tls:
      insecure: true

  otlp/tempo:
    endpoint: "tempo:4317"
    tls:
      insecure: true
  otlphttp/loki:
    endpoint: "http://loki:3100/otlp"
    tls:
      insecure: true
  # this one does not convert the dots to underscores
  # we would need some kind of transform processor to do that
  # MP 2025-05-30
  otlphttp/prometheus:
    endpoint: http://prometheus:9090/api/v1/otlp
    tls:
      insecure: true

service:
  telemetry:
    logs:
      level: debug

  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [otlp/tempo, debug]

    metrics:
      receivers: [otlp]
      processors: [memory_limiter, attributes/prometheus, batch]
      exporters: [prometheusremotewrite]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [otlphttp/loki, debug]
